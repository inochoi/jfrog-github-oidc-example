name: oidc-poc
on:
  push:
    branches:
      - '*'
jobs:
  auth:
    permissions:
      contents: read
      id-token: write

    runs-on: windows-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Set ID Token and Exchange for Access Token
        run: |
          # Step 1: Get ID Token
          $headers = @{
              "User-Agent" = "actions/oidc-client"
              "Authorization" = "Bearer $env:ACTIONS_ID_TOKEN_REQUEST_TOKEN"
          }
          $response = Invoke-RestMethod -Uri "$env:ACTIONS_ID_TOKEN_REQUEST_URL&audience=jfrog-github" -Headers $headers -Method GET
          $ID_TOKEN = $response.value
          echo "ID_TOKEN=$ID_TOKEN" >> $env:GITHUB_ENV
          
          # Step 2: Exchange ID Token for Access Token
          $headers = @{
              "Content-Type" = "application/json"
          }
          $body = @{
              grant_type = "urn:ietf:params:oauth:grant-type:token-exchange"
              subject_token_type = "urn:ietf:params:oauth:token-type:id_token"
              subject_token = $ID_TOKEN
              provider_name = "jfrog-github-oidc-example"
          } | ConvertTo-Json -Depth 10 -Compress
          $response = Invoke-RestMethod -Uri "https://mill.jfrog.team:12264/access/api/v1/oidc/token" -Headers $headers -Body $body -Method POST
          $ACCESS_TOKEN = $response.access_token
          echo "ACCESS_TOKEN=$ACCESS_TOKEN" >> $env:GITHUB_ENV
        shell: pwsh

      - name: Deploy Artifact to Artifactory
        env:
          ACCESS_TOKEN: ${{ env.ACCESS_TOKEN }}
        run: |
          # Create a file
          $filePath = "oidc-poc.txt"
          $artifactUri = "https://mill.jfrog.team:12264/artifactory/general-local/oidc-poc-$(Get-Date -Format 'yyyyMMddHHmmss')"
          Set-Content -Path $filePath -Value "TEST"
          
          # Upload the file
          $headers = @{
              "Authorization" = "Bearer $env:ACCESS_TOKEN"
          }
          Invoke-RestMethod -Uri $artifactUri -Headers $headers -InFile $filePath -Method PUT
          Write-Output "File successfully uploaded to Artifactory: $artifactUri"
        shell: pwsh
