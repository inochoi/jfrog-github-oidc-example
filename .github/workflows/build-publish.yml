name: oidc-poc
on:
    push:
        branches:
            - '*'
jobs:
    auth:
        permissions:
            contents: read
            id-token: write
        runs-on: ubuntu-latest
        steps:
            - name: Get id token
              run: |
                    ID_TOKEN=$(curl -sLS -H "User-Agent: actions/oidc-client" -H "Authorization: Bearer $ACTIONS_ID_TOKEN_REQUEST_TOKEN" \
                    "${ACTIONS_ID_TOKEN_REQUEST_URL}&audience=jfrog-github" | jq .value | tr -d '"')
                    echo "ID_TOKEN=${ID_TOKEN}" >> $GITHUB_ENV
            - name: Exchange token with access
              env:
                    ID_TOKEN: ${{env.ID_TOKEN}}
                    JFROG_PLATFORM_URL: https://trial6nui49.jfrog.io
              run: |
                    ACCESS_TOKEN=$(curl -XPOST -H "Content-Type: application/json" "https://trial6nui49.jfrog.io/access/api/v1/oidc/token" -d "{\"grant_type\": \"urn:ietf:params:oauth:grant-type:token-exchange\", \"subject_token_type\":\"urn:ietf:params:oauth:token-type:id_token\", \"subject_token\": \"${ID_TOKEN}\", \"provider_name\": \"jfrog-github-oidc-example\"}" | jq .access_token | tr -d '"')
                    echo "ACCESS_TOKEN=${ACCESS_TOKEN}" >> $GITHUB_ENV

            - name: Deploy Artifact to Artifactory
              env:
                  ACCESS_TOKEN: ${{ env.ACCESS_TOKEN }}
              run: |
                  # Create a file
                  $filePath = "oidc-poc.txt"
                  $artifactUri = "https://trial6nui49.jfrog.io/artifactory/general-local/oidc-poc-$(Get-Date -Format 'yyyyMMddHHmmss')"
                  Set-Content -Path $filePath -Value "TEST"
          
                  # Upload the file
                  $headers = @{
                  "Authorization" = "Bearer $env:ACCESS_TOKEN"
                  }
                  Invoke-RestMethod -Uri $artifactUri -Headers $headers -InFile $filePath -Method PUT
                  Write-Output "File successfully uploaded to Artifactory: $artifactUri"
              shell: pwsh
